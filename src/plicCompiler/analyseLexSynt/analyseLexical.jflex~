package toucan.model.compilation.analyse ;

import java_cup.runtime.*;
      
%%
   
%class AnalyseurLexical
%public

%line
%column
    
%type Symbol
%eofval{
        return symbol(CodesLexicaux.EOF) ;
%eofval}

%cup
   
%{
  private Symbol symbol(int type) {
	return new Symbol(type, yyline, yycolumn) ;
  }

  private Symbol symbol(int type, Object value) {
	return new Symbol(type, yyline, yycolumn, value) ;
  }
%}

%state commentaire

letter = [a-zA-Z]
number = [0-9]

commentaireSlashSlash = [/][/].*
commentaireSlashEtoile = [/][*]
commentaireEtoileSlash = [*][/]

croov	= \[
crofer	= \]
parouv 	= \(
parfer	= \)
egal	= =
op	= \+|\-|\*|\/

tab 	= tab

idf = [a-z]({letter}|{number})*

typePrimitif = int|String

%%

<YYINITIAL>";"              { return symbol(CodesLexicaux.POINTVIRGULE); }

<YYINITIAL>{croov}			{ return symbol(CodesLexicaux.CROOUV); }

<YYINITIAL>{crofer}			{ return symbol(CodesLexicaux.CROFER); }

<YYINITIAL>{parouv}			{ return symbol(CodesLexicaux.PAROUV); }

<YYINITIAL>{parfer}			{ return symbol(CodesLexicaux.PARFER); }

<YYINITIAL>{egal}			{ return symbol(CodesLexicaux.EGAL); }

<YYINITIAL>{op}				{ return symbol(CodesLexicaux.OP, yytext()); }

<YYINITIAL>{tab}			{ return symbol(CodesLexicaux.TAB, yytext()); }



<YYINITIAL>{number}+					{ return symbol(CodesLexicaux.CSTE, yytext()); }

<YYINITIAL>{typePrimitif}				{ return symbol(CodesLexicaux.TYPEPRIMITIF, yytext()); }

<YYINITIAL>{idf}						{ return symbol(CodesLexicaux.IDF, yytext()) ; }

<YYINITIAL>{commentaireSlashSlash} 		{ }

<YYINITIAL>{commentaireSlashEtoile}		{ yybegin(commentaire); }

<commentaire>{commentaireEtoileSlash}	{ yybegin(YYINITIAL); }


.                    {}
\n                   {}

